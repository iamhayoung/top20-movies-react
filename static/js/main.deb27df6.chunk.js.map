{"version":3,"sources":["components/GlobalStyle.js","components/Movie.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","MovieItem","styled","div","Img","img","MovieData","MovieTitle","h2","Year","p","Genres","ul","Genre","li","Summary","Movie","id","title","image","year","genres","summary","src","alt","map","genre","index","Container","section","Loading","Title","h1","MovieList","App","state","loading","movieList","loadMovies","a","axios","get","then","result","setState","data","movies","catch","error","console","log","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2QAqBeA,EAnBKC,YAAH,oa,OCEXC,EAAYC,IAAOC,IAAV,mUAeTC,EAAMF,IAAOG,IAAV,8LAWHC,EAAYJ,IAAOC,IAAV,0BAETI,EAAaL,IAAOM,GAAV,4LAWVC,EAAOP,IAAOQ,EAAV,sNAYJC,EAAST,IAAOU,GAAV,4JASNC,EAAQX,IAAOY,GAAV,mPAiBLC,EAAUb,IAAOQ,EAAV,+PAwCEM,EA3BD,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,OAAQC,EAAlC,EAAkCA,QAAlC,OACZ,mCACE,eAACrB,EAAD,CAAWgB,GAAIA,EAAf,UACE,cAACb,EAAD,CAAKmB,IAAKJ,EAAOK,IAAKN,IACtB,eAACZ,EAAD,WACE,cAACC,EAAD,UAAaW,IACb,cAACT,EAAD,UAAOW,IACP,cAACT,EAAD,UACGU,EAAOI,KAAI,SAACC,EAAOC,GAClB,OAAO,cAACd,EAAD,UAAoBa,GAARC,QAGvB,cAACZ,EAAD,UAAUO,a,iBCpGZM,EAAY1B,IAAO2B,QAAV,uQAcTC,EAAU5B,IAAOC,IAAV,kDAIP4B,EAAQ7B,IAAO8B,GAAV,4fAsBLC,EAAY/B,IAAOC,IAAV,iRA6EA+B,E,4MA9DbC,MAAQ,CACNC,SAAS,EACTC,UAAW,I,EAQbC,W,sBAAa,sBAAAC,EAAA,sEACLC,IACHC,IAAI,0CACJC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACZR,SAAS,EACTC,UAAWM,EAAOE,KAAKA,KAAKC,YAG/BC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACd,EAAKJ,SAAS,CACZR,SAAS,OAZJ,2C,uDALb,WACEa,QAAQC,IAAI,sBACZC,KAAKb,e,oBAoBP,WACEW,QAAQC,IAAI,UADL,MAEwBC,KAAKhB,MAA5BE,EAFD,EAECA,UAAWD,EAFZ,EAEYA,QACnB,OACE,qCACA,cAAC,EAAD,IACA,cAACR,EAAD,UACGQ,EACC,cAACN,EAAD,yBAEA,qCACE,cAACC,EAAD,4BACA,cAACE,EAAD,UACGI,EAAUZ,KAAI,SAAA2B,GACb,OACE,cAAC,EAAD,CAEEnC,GAAImC,EAAMnC,GACVC,MAAOkC,EAAMlC,MACbC,MAAOiC,EAAMC,mBACbjC,KAAMgC,EAAMhC,KACZC,OAAQ+B,EAAM/B,OACdC,QAAS8B,EAAM9B,SANV8B,EAAMnC,qB,GA5CbqC,IAAMC,WCxDxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.deb27df6.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;600&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n    Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  ul, li {\n    list-style: none;\n  }\n`\n\nexport default GlobalStyle;","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from \"prop-types\";\n\nconst MovieItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 30px;\n  background: #fff;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 18px 50px -10px;\n\n  @media only screen and (max-width: 767px) {\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    padding: 20px;\n  }\n`\n\nconst Img = styled.img`\n  max-width: 190px;\n  width: 100%;\n  margin-right: 30px;\n\n  @media only screen and (max-width: 767px) {\n    margin-right: 0;\n    margin-bottom: 20px;\n  }\n`\n\nconst MovieData = styled.div``\n\nconst MovieTitle = styled.h2`\n  margin-bottom: 5px;\n  font-weight: 600;\n  color: #333;\n  line-height: 1.3;\n\n  @media only screen and (max-width: 767px) {\n    text-align: center;\n  }\n`\n\nconst Year = styled.p`\n  margin-bottom: 20px;\n  font-size: 14px;\n  font-weight: 400;\n  color: #615555;\n\n  @media only screen and (max-width: 767px) {\n    margin-bottom: 0;\n    text-align: center;\n  }\n`\n\nconst Genres = styled.ul`\n  margin-bottom: 5px;\n\n  @media only screen and (max-width: 767px) {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n`\n\nconst Genre = styled.li`\n  display: inline-block;\n  font-size: 14px;\n  color: #9c9c9c;\n  font-weight: 300;\n\n  &:after {\n    content: '|';\n    margin: 5px;\n    color: #dadada;\n  }\n\n  &:last-child:after {\n    display: none;\n  }\n`\n\nconst Summary = styled.p`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 5;\n  overflow: hidden;\n  font-size: 14px;\n  color: #3a3636;\n\n  @media only screen and (max-width: 1200px) {\n    -webkit-line-clamp: 6;\n  }\n`\n\nconst Movie = ({id, title, image, year, genres, summary}) => (\n  <>\n    <MovieItem id={id}>\n      <Img src={image} alt={title} />\n      <MovieData>\n        <MovieTitle>{title}</MovieTitle>\n        <Year>{year}</Year>\n        <Genres>\n          {genres.map((genre, index) => {\n            return <Genre key={index}>{genre}</Genre>\n          })}\n        </Genres>\n        <Summary>{summary}</Summary>\n      </MovieData>\n    </MovieItem>\n  </>\n)\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n  summary: PropTypes.string.isRequired\n}\n\nexport default Movie;","import React from 'react';\nimport GlobalStyle from './components/GlobalStyle';\nimport styled from 'styled-components';\nimport Movie from './components/Movie'\nimport axios from 'axios';\n\nconst Container = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n  padding: 50px;\n  background: #fef9ef;\n\n  @media only screen and (max-width: 767px) {\n    padding: 20px;\n  }\n`\n\nconst Loading = styled.div`\n  font-weight: bold;\n`\n\nconst Title = styled.h1`\n  margin-bottom: 60px;\n  font-size: 120px;\n  letter-spacing: 7px;\n  -webkit-text-fill-color: transparent;\n  -webkit-text-stroke-width: 3px;\n  -webkit-text-stroke-color: white;\n  text-shadow: 8px 8px #cd4631, 17px 17px #000000;\n  text-align: center;\n  line-height: 1.3;\n  font-style: italic;\n\n  @media only screen and (max-width: 1200px) {\n    font-size: 83px;\n  }\n\n  @media only screen and (max-width: 767px) {\n    margin-bottom: 35px;\n    font-size: 47px;\n  }\n`\n\nconst MovieList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 500px);\n  grid-gap: 100px;\n\n  @media only screen and (max-width: 1200px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media only screen and (max-width: 767px) {\n    grid-gap: 45px;\n  }\n`\n\nclass App extends React.Component {\n  state = {\n    loading: true,\n    movieList: []\n  }\n\n  componentDidMount() {\n    console.log(\"componentdidmount!\");\n    this.loadMovies();\n  }\n\n  loadMovies = async () => {\n    await axios\n      .get(\"https://yts.mx/api/v2/list_movies.json\")\n      .then(result => {\n        this.setState({\n          loading: false,\n          movieList: result.data.data.movies\n        });\n      })\n      .catch(error => {\n        console.error(error);\n        this.setState({\n          loading: true\n        })\n      })\n  };\n\n  render() {\n    console.log('render')\n    const { movieList, loading } = this.state;\n    return (\n      <>\n      <GlobalStyle />\n      <Container>\n        {loading ? (\n          <Loading>Loading...</Loading>\n          ) : (\n          <>\n            <Title>Top 20 Movies</Title>\n            <MovieList>\n              {movieList.map(movie => {\n                return (\n                  <Movie\n                    key={movie.id}\n                    id={movie.id}\n                    title={movie.title}\n                    image={movie.medium_cover_image}\n                    year={movie.year}\n                    genres={movie.genres}\n                    summary={movie.summary}\n                  />\n                )\n              })}\n            </MovieList>\n          </>\n        )}\n      </Container>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}